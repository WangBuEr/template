<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>cn.buer</groupId>
		<artifactId>template</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>app-web</artifactId>
	<packaging>war</packaging>
	<properties>
		<spring.version>3.2.14.RELEASE</spring.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.15</version>
		</dependency>
		<dependency>
			<groupId>org.logback-extensions</groupId>
			<artifactId>logback-ext-spring</artifactId>
			<version>0.1.2</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.2.8</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.36</version>
		</dependency>
		<dependency>
			<groupId>cn.buer</groupId>
			<artifactId>app-util</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<!-- dubbo begin -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>dubbo</artifactId>
			<version>2.5.3</version>
			<exclusions>
				<exclusion>
					<artifactId>spring</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>
		<!-- dubbo end -->


		<!-- zookeeper begin -->
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<version>3.4.6</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.101tec</groupId>
			<artifactId>zkclient</artifactId>
			<version>0.4</version>
		</dependency>
		<!-- zookeeper end -->
<!-- 		分布式session -->
		<dependency>
		    <groupId>org.springframework.session</groupId>
		    <artifactId>spring-session</artifactId>
		    <version>1.2.1.RELEASE</version>
		</dependency>
<!-- 		hash -->
		<dependency>
		    <groupId>com.google.guava</groupId>
		    <artifactId>guava</artifactId>
		    <version>18.0</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- 版本号插件 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create-timestamp</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<format>{0,date,yyyy-MM-dd HH:mm:ss}</format>
					<items>
						<item>timestamp</item>
					</items>
				</configuration>
			</plugin>
			<!-- js css 压缩合并 -->
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>yuicompressor-maven-plugin</artifactId>
				<version>1.5.0</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>compress</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- 读取js,css文件采用UTF-8编码 -->
					<encoding>UTF-8</encoding>
					<!-- 不显示js可能的错误 -->
					<jswarn>false</jswarn>
					<!-- 若存在已压缩的文件，会先对比源文件是否有改动。有改动便压缩，无改动就不压缩 -->
					<force>false</force>
					<!-- 在指定的列号后插入新行 -->
					<linebreakpos>-1</linebreakpos>
					<!-- 压缩之前先执行聚合文件操作 -->
					<preProcessAggregates>true</preProcessAggregates>
					<!-- 压缩后保存文件后缀 -->
					<!-- <suffix></suffix> -->
					<!-- 去除后缀 -->
					<nosuffix>true</nosuffix>
					<!-- 源目录，即需压缩的根目录 -->
					<sourceDirectory>${project.build.directory}/${project.build.finalName}/resources</sourceDirectory>
					<!-- 压缩js和css文件 -->
					<includes>
						<include>script/app.pack.${timestamp}.js</include>
						<include>styles/app.pack.${timestamp}.css</include>
					</includes>
					<!-- 以下目录和文件不会被压缩 -->
<!-- 					<excludes> -->
<!-- 						<exclude>**/*.min.js</exclude> -->
<!-- 						<exclude>**/*.min.css</exclude> -->
<!-- 						<exclude>common/script/*.js</exclude> -->
<!-- 						<exclude>common/style/*.css</exclude> -->
<!-- 					</excludes> -->
					<!-- 压缩后输出文件目录 -->
					<outputDirectory>${project.build.directory}/${project.build.finalName}/resources</outputDirectory>
					<!-- 聚合文件 -->
					<aggregations>
						<aggregation>
							<!-- 合并每一个文件后插入一新行 -->
							<insertNewLine>true</insertNewLine>
							<!-- 需合并文件的根文件夹 -->
							<inputDir>${basedir}/src/main/webapp/resources/script</inputDir>
							<!-- 最终合并的输出文件 -->
							<output>${project.build.directory}/${project.build.finalName}/resources/script/app.pack.${timestamp}.js</output>
							<!-- 把以下js文件合并成一个js文件，是按顺序合并的 -->
							<includes>
								<include>app/**/*.js</include>
							</includes>
						</aggregation>
						<aggregation>
							<!-- 合并每一个文件后插入一新行 -->
							<insertNewLine>true</insertNewLine>
							<!-- 需合并文件的根文件夹 -->
							<inputDir>${basedir}/src/main/webapp/resources/styles</inputDir>
							<!-- 最终合并的输出文件 -->
							<output>${project.build.directory}/${project.build.finalName}/resources/styles/app.pack.${timestamp}.css</output>
							<!-- 把以下js文件合并成一个js文件，是按顺序合并的 -->
							<includes>
								<include>*.css</include>
								<include>**/*.css</include>
							</includes>
						</aggregation>
					</aggregations>
				</configuration>
			</plugin>
			


			<!-- 替换页面中未压缩的js css 引入 -->
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.2</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<basedir>${basedir}/src/main/webapp/WEB-INF/views</basedir>
                	<filesToInclude>**/*.jsp</filesToInclude>
                	<outputBasedir>${project.build.directory}/${project.build.finalName}</outputBasedir>
                	<outputDir>WEB-INF/views</outputDir>
					<replacements>
						<replacement>
							<token>
			                    <![CDATA[
			                    <!-- scriptMergeTo:([^\s]*) -->(.*?)<!-- scriptMergeTo -->
			                    ]]>
							</token>
							<value>
			                    <![CDATA[
			                    <script type="text/javascript" src="/${project.artifactId}/app.pack.${timestamp}.js" ></script>
			                    ]]>
							</value>
						</replacement>
						<replacement>
							<token>
			                    <![CDATA[
			                    <!-- styleMergeTo:([^\s]*) -->(.*?)<!-- styleMergeTo -->
			                    ]]>
							</token>
							<value>
			                    <![CDATA[
			                    <link href="/${project.artifactId}/app.pack.${timestamp}.js" type="text/css" rel="stylesheet" />
			                    ]]>
							</value>
						</replacement>
					</replacements>
					<regexFlags>
						<regexFlag>CASE_INSENSITIVE</regexFlag>
						<regexFlag>DOTALL</regexFlag>
					</regexFlags>
				</configuration>
			</plugin>

			<!-- 打包过滤未压缩的js 和替换的jsp -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<warName>${project.artifactId}</warName>
					<warSourceExcludes>
						resources/script/app/*.js,
						resources/styles/*.css,
						WEB-INF/views/**/*.jsp
					</warSourceExcludes>
				</configuration>
			</plugin>


			<!-- mybatis 自动生成dao插件 -->
<!-- 			<plugin> -->
<!-- 				<groupId>org.mybatis.generator</groupId> -->
<!-- 				<artifactId>mybatis-generator-maven-plugin</artifactId> -->
<!-- 				<version>1.3.2</version> -->
<!-- 				<dependencies> -->
<!-- 					<dependency> -->
<!-- 						<groupId>cn.buer</groupId> -->
<!-- 						<artifactId>app-util</artifactId> -->
<!-- 						<version>0.0.1-SNAPSHOT</version> -->
<!-- 					</dependency> -->
<!-- 				</dependencies> -->
<!-- 				<configuration> -->
<!-- 					<verbose>true</verbose> -->
<!-- 					<overwrite>true</overwrite> -->
<!-- 				</configuration> -->
<!-- 			</plugin> -->
		</plugins>
	</build>
</project>